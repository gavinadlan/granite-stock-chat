name: Test Suite (DISABLED)

on:
  workflow_dispatch:  # Only manual trigger

jobs:
  # Frontend Tests
  frontend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
        
    - name: Run linting
      run: |
        cd frontend
        npm run lint
        
    - name: Run type checking
      run: |
        cd frontend
        npx tsc --noEmit
        
    - name: Build application
      run: |
        cd frontend
        npm run build
        
    - name: Test build output
      run: |
        cd frontend
        if [ ! -d "dist" ]; then
          echo "Build failed - dist directory not found"
          exit 1
        fi
        echo "Build successful - dist directory created"

  # Backend Tests
  backend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
        
    - name: Install dependencies
      run: |
        cd backend
        npm ci
        
    - name: Validate serverless config
      run: |
        cd backend
        npx serverless config validate
        
    - name: Test serverless package
      run: |
        cd backend
        npx serverless package --stage test
        
    - name: Test Lambda functions syntax
      run: |
        cd backend/functions
        for file in *.js; do
          echo "Checking syntax for $file"
          node -c "$file"
        done

  # API Integration Tests
  api-tests:
    runs-on: ubuntu-latest
    needs: [frontend-tests, backend-tests]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: |
        cd backend
        npm ci
        
    - name: Start backend locally
      run: |
        cd backend
        npm run dev &
        sleep 10
        
    - name: Test API endpoints
      run: |
        # Test stock price endpoint
        curl -f http://localhost:3001/dev/stock-price?symbol=AAPL || exit 1
        
        # Test technical analysis endpoint
        curl -f http://localhost:3001/dev/technical-analysis?symbol=AAPL || exit 1
        
        # Test AI prediction endpoint
        curl -f "http://localhost:3001/dev/ai-prediction?symbol=AAPL&timeframe=1%20week" || exit 1
        
        # Test news endpoint
        curl -f http://localhost:3001/dev/market-news?symbol=AAPL || exit 1
        
        echo "All API endpoints are working!"
        
    - name: Test Indonesian stocks
      run: |
        # Test Indonesian stock formatting
        curl -f http://localhost:3001/dev/stock-price?symbol=BBCA.JK || exit 1
        curl -f http://localhost:3001/dev/technical-analysis?symbol=BBCA.JK || exit 1
        echo "Indonesian stocks are working!"

  # Performance Tests
  performance-tests:
    runs-on: ubuntu-latest
    needs: [api-tests]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: |
        cd backend
        npm ci
        
    - name: Start backend locally
      run: |
        cd backend
        npm run dev &
        sleep 10
        
    - name: Run performance tests
      run: |
        # Test response times
        echo "Testing API response times..."
        
        # Stock price API
        start_time=$(date +%s%N)
        curl -s http://localhost:3001/dev/stock-price?symbol=AAPL > /dev/null
        end_time=$(date +%s%N)
        duration=$(( (end_time - start_time) / 1000000 ))
        echo "Stock price API: ${duration}ms"
        
        # Technical analysis API
        start_time=$(date +%s%N)
        curl -s http://localhost:3001/dev/technical-analysis?symbol=AAPL > /dev/null
        end_time=$(date +%s%N)
        duration=$(( (end_time - start_time) / 1000000 ))
        echo "Technical analysis API: ${duration}ms"
        
        # AI prediction API (may take longer)
        start_time=$(date +%s%N)
        curl -s "http://localhost:3001/dev/ai-prediction?symbol=AAPL&timeframe=1%20week" > /dev/null
        end_time=$(date +%s%N)
        duration=$(( (end_time - start_time) / 1000000 ))
        echo "AI prediction API: ${duration}ms"
        
        echo "Performance tests completed!"
