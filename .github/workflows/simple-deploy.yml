name: Simple Deploy

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'frontend/package-lock.json'
        
    - name: Install dependencies
      run: |
        cd frontend
        npm install
        
    - name: Build frontend
      run: |
        cd frontend
        npm run build
      env:
        VITE_API_BASE_URL: https://placeholder.amazonaws.com/dev
        
    - name: List build files
      run: |
        cd frontend
        ls -la dist/
        echo "Build completed successfully!"
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-2
        
    - name: Test AWS connection
      run: |
        aws sts get-caller-identity
        echo "‚úÖ AWS connection successful!"
        
    - name: Deploy to S3
      run: |
        cd frontend
        aws s3 sync dist/ s3://staging-stock-market-chat-frontend-1758970542 --delete
        
    - name: Configure S3 for CloudFront
      run: |
        # Set bucket policy for CloudFront access only
        aws s3api put-bucket-policy \
          --bucket staging-stock-market-chat-frontend-1758970542 \
          --policy '{
            "Version": "2012-10-17",
            "Statement": [
              {
                "Sid": "CloudFrontServicePrincipal",
                "Effect": "Allow",
                "Principal": {
                  "Service": "cloudfront.amazonaws.com"
                },
                "Action": "s3:GetObject",
                "Resource": "arn:aws:s3:::staging-stock-market-chat-frontend-1758970542/*",
                "Condition": {
                  "StringEquals": {
                    "AWS:SourceArn": "arn:aws:cloudfront::1758970542:distribution/E1234567890ABCD"
                  }
                }
              }
            ]
          }'
        
        # Block public access (CloudFront will handle public access)
        aws s3api put-public-access-block \
          --bucket staging-stock-market-chat-frontend-1758970542 \
          --public-access-block-configuration "BlockPublicAcls=true,IgnorePublicAcls=true,BlockPublicPolicy=true,RestrictPublicBuckets=true"
        
        echo "‚úÖ S3 configured for CloudFront access"
        
    - name: Invalidate CloudFront Cache
      run: |
        # Invalidate CloudFront distribution to serve new content
        aws cloudfront create-invalidation \
          --distribution-id E1234567890ABCD \
          --paths "/*"
        
        echo "‚úÖ CloudFront cache invalidated"
        
    - name: Success message
      run: |
        echo "üéâ Deployment completed successfully!"
        echo "üåê Website: https://stockai.gavinadlan.my.id"
        echo "üì¶ S3 Bucket: staging-stock-market-chat-frontend-1758970542"
        echo "‚òÅÔ∏è CloudFront Distribution: E1234567890ABCD"