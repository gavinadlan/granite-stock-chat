service: stock-market-chatbot

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  stage: ${opt:stage, 'dev'}
  environment:
    REPLICATE_API_KEY: ${env:REPLICATE_API_KEY, 'r8_DaMQj6GV5SXmXlriHPJnRf5TjwPaVSu0PPewg'}
    NEWS_API_KEY: ${env:NEWS_API_KEY, 'your_news_api_key_here'}
    ALPHA_VANTAGE_API_KEY: ${env:ALPHA_VANTAGE_API_KEY, 'your_alpha_vantage_api_key_here'}
    RAPIDAPI_KEY: ${env:RAPIDAPI_KEY, '024887c011msh588fd1cec974e2bp16266djsn1b16f80bcfe9'}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: "*"

functions:
  stockPrice:
    handler: functions/stock-price.handler
    events:
      - http:
          path: /stock-price
          method: get
          cors: true
    timeout: 30
    memorySize: 256

  aiPrediction:
    handler: functions/ai-prediction.handler
    events:
      - http:
          path: /ai-prediction
          method: get
          cors: true
    timeout: 60
    memorySize: 512

  technicalAnalysis:
    handler: functions/technical-analysis.handler
    events:
      - http:
          path: /technical-analysis
          method: get
          cors: true
    timeout: 30
    memorySize: 256

  marketNews:
    handler: functions/market-news.handler
    events:
      - http:
          path: /market-news
          method: get
          cors: true
    timeout: 30
    memorySize: 256

plugins:
  - serverless-offline

custom:
  serverless-offline:
    httpPort: 3001
    host: 0.0.0.0

package:
  exclude:
    - node_modules/**
    - .git/**
    - .env*
    - README.md
    - aws-lambda/**

resources:
  Resources:
    ApiGatewayRestApi:
      Type: AWS::ApiGateway::RestApi
      Properties:
        Name: StockMarketChatbotAPI
        Description: API for Stock Market Chatbot
        EndpointConfiguration:
          Types:
            - REGIONAL
